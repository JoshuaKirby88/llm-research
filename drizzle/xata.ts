// Generated by Xata Codegen 0.30.1. Please do not edit.
import { env } from "@/utils/env"
import { buildClient } from "@xata.io/client"
import type { BaseClientOptions, SchemaInference, XataRecord } from "@xata.io/client"

const tables = [
	{
		name: "BlockingValue",
		checkConstraints: {},
		foreignKeys: {
			BlockingValue_blockingVariableId_BlockingVariable_id_fk: {
				name: "BlockingValue_blockingVariableId_BlockingVariable_id_fk",
				columns: ["blockingVariableId"],
				referencedTable: "BlockingVariable",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "blockingVariableId",
				type: "link",
				link: { table: "BlockingVariable" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "value",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
		],
	},
	{
		name: "BlockingVariable",
		checkConstraints: {},
		foreignKeys: {
			BlockingVariable_researchId_Research_id_fk: {
				name: "BlockingVariable_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "name",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "prompt",
				type: "text",
				notNull: false,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "Completion",
		checkConstraints: {},
		foreignKeys: {
			Completion_testId_Test_id_fk: {
				name: "Completion_testId_Test_id_fk",
				columns: ["testId"],
				referencedTable: "Test",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "content",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "testId",
				type: "link",
				link: { table: "Test" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "tokens",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "Contributor",
		checkConstraints: {},
		foreignKeys: {
			Contributor_researchId_Research_id_fk: {
				name: "Contributor_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "count",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "userId",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
		],
	},
	{
		name: "EvalPrompt",
		checkConstraints: {},
		foreignKeys: {
			EvalPrompt_researchId_Research_id_fk: {
				name: "EvalPrompt_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "text",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "IndependentValue",
		checkConstraints: {},
		foreignKeys: {
			IndependentValue_independentVariableId_IndependentVariable_id_f: {
				name: "IndependentValue_independentVariableId_IndependentVariable_id_f",
				columns: ["independentVariableId"],
				referencedTable: "IndependentVariable",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "independentVariableId",
				type: "link",
				link: { table: "IndependentVariable" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "value",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
		],
	},
	{
		name: "IndependentVariable",
		checkConstraints: {},
		foreignKeys: {
			IndependentVariable_researchId_Research_id_fk: {
				name: "IndependentVariable_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "name",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "prompt",
				type: "text",
				notNull: false,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "Message",
		checkConstraints: {},
		foreignKeys: {
			Message_testId_Test_id_fk: {
				name: "Message_testId_Test_id_fk",
				columns: ["testId"],
				referencedTable: "Test",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "content",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "role",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "testId",
				type: "link",
				link: { table: "Test" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "tokens",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "MessagePrompt",
		checkConstraints: {},
		foreignKeys: {
			MessagePrompt_researchId_Research_id_fk: {
				name: "MessagePrompt_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "role",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "text",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "Research",
		checkConstraints: {},
		foreignKeys: {},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "isCompleted",
				type: "bool",
				notNull: false,
				unique: false,
				defaultValue: "false",
				comment: "",
			},
			{
				name: "name",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "userId",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
		],
	},
	{
		name: "ResearchResult",
		checkConstraints: {},
		foreignKeys: {
			ResearchResult_resultEnumId_ResultEnum_id_fk: {
				name: "ResearchResult_resultEnumId_ResultEnum_id_fk",
				columns: ["resultEnumId"],
				referencedTable: "ResultEnum",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "count",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "resultEnumId",
				type: "link",
				link: { table: "ResultEnum" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "ResultEnum",
		checkConstraints: {},
		foreignKeys: {
			ResultEnum_researchId_Research_id_fk: {
				name: "ResultEnum_researchId_Research_id_fk",
				columns: ["researchId"],
				referencedTable: "Research",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "researchId",
				type: "link",
				link: { table: "Research" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "value",
				type: "text",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
		],
	},
	{
		name: "Test",
		checkConstraints: {},
		foreignKeys: {
			Test_independentValueId_IndependentValue_id_fk: {
				name: "Test_independentValueId_IndependentValue_id_fk",
				columns: ["independentValueId"],
				referencedTable: "IndependentValue",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
			Test_resultEnumId_ResultEnum_id_fk: {
				name: "Test_resultEnumId_ResultEnum_id_fk",
				columns: ["resultEnumId"],
				referencedTable: "ResultEnum",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
			Test_testBatchId_TestBatch_id_fk: {
				name: "Test_testBatchId_TestBatch_id_fk",
				columns: ["testBatchId"],
				referencedTable: "TestBatch",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "blockingValueIds",
				type: "integer[]",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "independentValueId",
				type: "link",
				link: { table: "IndependentValue" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "resultEnumId",
				type: "link",
				link: { table: "ResultEnum" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "testBatchId",
				type: "link",
				link: { table: "TestBatch" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "TestBatch",
		checkConstraints: {},
		foreignKeys: {
			TestBatch_contributorId_Contributor_id_fk: {
				name: "TestBatch_contributorId_Contributor_id_fk",
				columns: ["contributorId"],
				referencedTable: "Contributor",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "contributorId",
				type: "link",
				link: { table: "Contributor" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "count",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
	{
		name: "TestBatchResult",
		checkConstraints: {},
		foreignKeys: {
			TestBatchResult_resultEnumId_ResultEnum_id_fk: {
				name: "TestBatchResult_resultEnumId_ResultEnum_id_fk",
				columns: ["resultEnumId"],
				referencedTable: "ResultEnum",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
			TestBatchResult_testBatchId_TestBatch_id_fk: {
				name: "TestBatchResult_testBatchId_TestBatch_id_fk",
				columns: ["testBatchId"],
				referencedTable: "TestBatch",
				referencedColumns: ["id"],
				onDelete: "NO ACTION",
			},
		},
		primaryKey: ["id"],
		uniqueConstraints: {},
		columns: [
			{
				name: "count",
				type: "int",
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "createdAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
			{
				name: "id",
				type: "int",
				notNull: true,
				unique: true,
				defaultValue: null,
				comment: "",
			},
			{
				name: "resultEnumId",
				type: "link",
				link: { table: "ResultEnum" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "testBatchId",
				type: "link",
				link: { table: "TestBatch" },
				notNull: true,
				unique: false,
				defaultValue: null,
				comment: "",
			},
			{
				name: "updatedAt",
				type: "timestamp without time zone",
				notNull: true,
				unique: false,
				defaultValue: "now()",
				comment: "",
			},
		],
	},
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type BlockingValue = InferredTypes["BlockingValue"]
export type BlockingValueRecord = BlockingValue & XataRecord

export type BlockingVariable = InferredTypes["BlockingVariable"]
export type BlockingVariableRecord = BlockingVariable & XataRecord

export type Completion = InferredTypes["Completion"]
export type CompletionRecord = Completion & XataRecord

export type Contributor = InferredTypes["Contributor"]
export type ContributorRecord = Contributor & XataRecord

export type EvalPrompt = InferredTypes["EvalPrompt"]
export type EvalPromptRecord = EvalPrompt & XataRecord

export type IndependentValue = InferredTypes["IndependentValue"]
export type IndependentValueRecord = IndependentValue & XataRecord

export type IndependentVariable = InferredTypes["IndependentVariable"]
export type IndependentVariableRecord = IndependentVariable & XataRecord

export type Message = InferredTypes["Message"]
export type MessageRecord = Message & XataRecord

export type MessagePrompt = InferredTypes["MessagePrompt"]
export type MessagePromptRecord = MessagePrompt & XataRecord

export type Research = InferredTypes["Research"]
export type ResearchRecord = Research & XataRecord

export type ResearchResult = InferredTypes["ResearchResult"]
export type ResearchResultRecord = ResearchResult & XataRecord

export type ResultEnum = InferredTypes["ResultEnum"]
export type ResultEnumRecord = ResultEnum & XataRecord

export type Test = InferredTypes["Test"]
export type TestRecord = Test & XataRecord

export type TestBatch = InferredTypes["TestBatch"]
export type TestBatchRecord = TestBatch & XataRecord

export type TestBatchResult = InferredTypes["TestBatchResult"]
export type TestBatchResultRecord = TestBatchResult & XataRecord

export type DatabaseSchema = {
	BlockingValue: BlockingValueRecord
	BlockingVariable: BlockingVariableRecord
	Completion: CompletionRecord
	Contributor: ContributorRecord
	EvalPrompt: EvalPromptRecord
	IndependentValue: IndependentValueRecord
	IndependentVariable: IndependentVariableRecord
	Message: MessageRecord
	MessagePrompt: MessagePromptRecord
	Research: ResearchRecord
	ResearchResult: ResearchResultRecord
	ResultEnum: ResultEnumRecord
	Test: TestRecord
	TestBatch: TestBatchRecord
	TestBatchResult: TestBatchResultRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
	databaseURL: "https://jojokirby88-s-workspace-ctq4nn.us-east-1.xata.sh/db/llm-research",
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables)
	}
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
	if (instance) return instance

	instance = new XataClient({ apiKey: env.XATA_API_KEY, branch: env.XATA_BRANCH })
	return instance
}
